:root {
    /* lighter and darker accent color */
    --clr-accent-600: hsl(12, 90%, 40%);
    --clr-accent-500: hsl(12, 88%, 50%);
    --clr-accent-400: hsl(12, 88%, 59%);
    --clr-accent-300: hsl(12, 88%, 75%);
    --clr-accent-100: hsl(13, 100%, 96%);


    --clr-primary-400: hsl(228, 39%, 23%);


    --clr-neutral-900: hsl(232, 12%, 13%);
    --clr-neutral-100: hsl(0 0% 100%);

    --ff-primary: 'Be Vietnam Pro', sans-serif;
    --ff-body: var(--ff-primary);
    --ff-heading: var(--f-primary);

    --fw-regular: 300;
    --fw-semi-bold: 500;
    --fw-bold: 700;
    /* fonts arent writte in small and large becuase i need all the sizes for all screen sizes and responsiveness */
    --fs-300: 0.8125rem;
    --fs-400: 0.875rem;
    --fs-500: 0.9375rem;
    --fs-600: 1rem;
    --fs-700: 1.875rem;
    --fs-800: 2.5rem;
    --fs-900: 3.5rem;
    --fs-body: var(var(--fs-400));
    --fs-nav: var(--fs-500);
    --fs-primary-heading: var(--fs-800);
    --fs-secondary-heading: var(--fs-700);
    --fs-button: var(--fs-300);
    --size-100: 0.25rem;
    --size-200: 0.5rem;
    --size-300: 0.75rem;
    --size-400: 1rem;
    --size-500: 1.5rem;
    --size-600: 2rem;
    --size-700: 3rem;
    --size-800: 4rem;
    --size-900: 5rem;
}

/* 50 em is probably 520px or sth */
@media (min-width: 50em) {
    :root {

        --fs-body: var(var(--fs-500));
        --fs-nav: var(--fs-300);
        --fs-primary-heading: var(--fs-900);
        --fs-secondary-heading: var(--fs-800);
    }
}

/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Prevent font size inflation */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
    height: 100%;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
    margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
    list-style: none;
}

* {
    font: inherit;
    padding: 0;
    margin: 0;
}

/* Set core body defaults */
body {
    overflow-x: clip;
    min-height: 100vh;
    line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
    line-height: 1.1;
}


/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

a {
    text-decoration: none;
}

/* Make images easier to work with */
img,
picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
    font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
    min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
    scroll-margin-block: 5ex;
}

/* all colors are copied too lazy tow reite */
/* these are all called utility classes */
.text-primary-400 {
    color: var(--clr-primary-400);
}

.text-accent-400 {
    color: var(--clr-accent-400);
}

.text-accent-100 {
    color: var(--clr-accent-100);
}

.text-neutral-100 {
    color: var(--clr-neutral-100);
}

.text-neutral-900 {
    color: var(--clr-neutral-900);
}

.bg-primary-400 {
    background-color: var(--clr-primary-400);
}

.bg-accent-400 {
    background-color: var(--clr-accent-400);
}

.bg-accent-100 {
    background-color: var(--clr-accent-100);
}

.bg-neutral-100 {
    background-color: var(--clr-neutral-100);
}

.bg-neutral-900 {
    background-color: var(--clr-neutral-900);
}

.fw-bold {
    font-weight: var(--fw-bold);
}

.fw-semi-bold {
    font-weight: var(--fw-semi-bold);
}

.fw-regular {
    font-weight: var(--fw-regular);
}

.fs-primary-heading {
    font-size: var(--fs-primary-heading);
    line-height: 1.1;
}

.fs-secondary-heading {
    font-size: var(--fs-secondary-heading);
    line-height: 1.1;
}

.fs-600 {
    font-size: var(--fs-600);
}

.fs-500 {
    font-size: var(--fs-500);
}


.fs-400 {
    font-size: var(--fs-400);
}

.fs-300 {
    font-size: var(--fs-300);
}

.padding-block-900 {
    padding-left: 3rem;
}

.padding-block-700 {
    padding: 1.5rem;
}

/* setting up the environment */
body {
    font-size: var(--fs-body);
    font-family: var(--ff-family);
    color: var(--clr-primary-400);
}

.main-section,
.mid-section {
    width: 80%;
    padding: var(--size-400);
    margin-inline: auto;
    /* i think margin inline is gogod becuase if you flip the phone or sth */
}

header {
    justify-content: center;
}


/*
.even-columns{
    display: grid;
    gap: 1rem;
}*/
/* code is a bit bad because its inconsistent in behaivours some 
behaviours are written web first and the others are mobile first 
wihch annoys me a bit but i aint going to clean too much hassle */
.even-columns {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    justify-content: center;
}

.main-section p,
.mid-section p {
    margin-inline: auto;
    font-weight: var(--fw-semi-bold);
    opacity: 0.7;
}


/* jus here for the background image */
.cta {
    gap: 1rem;
    position: relative;
    isolation: isolate;
    width: 100%;
    padding: var(--size-600);
    /* i used to put here align items but it broke because the cta was changing */
    /* display type so i put it back in the media query so after changing the type from  */
    /* flex to grid i gotta align the items so putting the aligning of items here doesnt matter because */
    /* changing the alignment came after at least thats what i think */
    /* and here its changing becuase of even columns property class */
}

.cta p {
    text-align: center;
}

/* while this doesnt matter in any state of media and doesnt change by even columns changing so it stays here and stays the same */
.cta div {
    display: inline-flex;
    justify-content: end;
}

.cta::before {
    content: "";
    position: absolute;
    z-index: -2;
    inset: 0;
    background-image: url("images/bg-tablet-pattern.svg"), url("images/bg-tablet-pattern.svg");
    background-position: -6rem -5rem, 57rem -40rem;
    background-repeat: no-repeat;
    opacity: 0.1;
}

/* spacing and alignment of paragraphs and components */

p:not([class]) {
    max-width: 35ch;
    line-height: 1.5;
}

.manage-list ul p {
    max-width: 42ch;
}


:where(.spacer *) {
    margin-top: 2rem;
}

@media (min-width: 50em) {

    /* block elements for size higher than 800 */
    .even-columns {
        display: grid;
        text-align: left;
        align-items: start;
        gap: 2rem;
        justify-content: end;
        grid-auto-columns: 1fr;
        grid-auto-flow: column;
        justify-items: center;

    }

    .even-columns p {
        margin-inline: 0;
        text-wrap: wrap;
    }

    .cta p {
        text-align: left;
    }

    .cta {
        grid-auto-columns: 3fr 1fr;
        align-items: center;
        padding: var(--size-800) 8rem var(--size-800) 5rem;
    }
}


/* button styling */
.button {
    cursor: pointer;
    padding: 1em 2.5em;
    border: 0;
    border-radius: 100vmax;
    font-weight: var(--fw-bold);
    font-size: var(--fs-button);
    color: var(--clr-accent-100);
    background-color: var(--clr-accent-400);
    box-shadow: 0 1.125em 1em -1em var(--clr-accent-500);
}

.button[data-type="inverted"] {
    background-color: var(--clr-accent-100);
    color: var(--clr-accent-400);

}

.button[data-type="inverted"]:hover,
.button[data-type="inverted"]:focus-visible {
    background-color: var(--clr-accent-100);
    color: var(--clr-accent-300);
}

.button:hover,
.button:focus-visible {
    background-color: var(--clr-accent-300);

}

/* header configurations for lower and higher screen sizes */

header {
    width: 80%;
    margin-inline: auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--size-600);
}

header button {
    display: inline-flex;
}

.primary-navigation ul {
    display: inline-flex;
    text-emphasis-style: none;
    gap: 1vw;
    font-size: var(--fs-nav);
}

.primary-navigation ul a:hover,
.primary-navigation ul a:focus-visible {
    color: var(--clr-accent-400);
}

header .mobile-nav-toggle {
    display: none;
}

/* .primary-footer styling */
/* it works really well the input field just needs to be bigger idk how yett  */
/* without giving it a fixed size */


.primary-footer {
    position: relative;
    grid-template-columns: 1fr 3fr 2fr;
    display: grid;
    width: 100%;
    gap: 2rem;
    padding: var(--size-900);
    text-align: left;
    align-items: start;
    justify-content: end;
    grid-auto-flow: column;
}

.primary-footer form {
    grid-area: 1/3/1/3;
    display: flex;
    gap: 1rem;
}

.primary-footer form input {
    border-radius: 100vmax;
    outline: none;
    width: 60%;
    padding-left: var(--size-400);
    padding-right: var(--size-400);
    flex-shrink: 0;
    border: 0px white;
}

.primary-footer form input::placeholder {
    opacity: 0.7;
}

.primary-footer form input:focus {
    border: 1.5px solid var(--clr-accent-400);
    outline: none;
}

.primary-footer form input:invalid {
    border: 1.5px solid var(--clr-accent-600);
    outline: none;
}

.primary-footer form input {
    border-radius: 100vmax;
    outline: none;
}

.primary-footer form button {
    display: inline-flex;
    justify-self: end;
}

.primary-footer span {
    grid-area: 1/3/1/3;
    z-index: 1;
    align-self: flex-end;
    justify-self: end;
    color: var(--clr-neutral-100);
    opacity: 0.7;
}

.primary-footer nav {
    grid-area: 1/2/1/2;
    color: var(--clr-neutral-100);
}

/* there is a problem when navigation after 800 the links look off centered */
/* but fuck it its such a hassle i think can be solved by displaying li as flex and centering the anchors */
/* not worth the time */
.primary-footer nav ul {
    display: flex;
    text-align: start;
    flex-wrap: wrap;
    align-content: center;
    justify-content: flex-start;
    align-items: baseline;
}

.primary-footer nav ul li {
    flex: 1 1 50%;
}

.primary-footer a:hover,
.primary-footer a:focus-visible {
    color: var(--clr-accent-400);
}

:where(.primary-footer .spacer :not(:first-child)) {
    margin-top: 1.5rem;
}



.primary-footer ul {
    text-align: start;
}


.primary-footer .links {
    grid-area: 1/1/1/1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    align-self: stretch;
}

.primary-footer .links a svg {
    aspect-ratio: 4.5;
    --logo-color: var(--clr-neutral-100);
}

.primary-footer .social {
    display: inline-flex;
    flex-direction: row;
    gap: 1rem;
}


.primary-footer .social a svg {
    aspect-ratio: 1;
    fill: var(--clr-neutral-100);
    width: var(--size-500);
}

.primary-footer .social a:where(:hover, :focus-visible) svg {
    fill: var(--clr-accent-400);
}

@media (max-width:50em) {

    .primary-footer {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .primary-footer .links {
        margin-right: 0;
        display: flex;
        gap: 3.5rem;
        flex-direction: column-reverse;
    }

    .primary-footer .social {
        margin-top: 1rem;
        gap: 2rem;
    }

    .primary-footer span {
        align-self: center;
        text-align: center;
    }

    .primary-footer .links {
        order: 4;
    }


    .primary-footer nav {
        order: 2;
    }


    .primary-footer form {
        order: 1;
        justify-self: stretch;
    }

    .primary-footer form input {
        width: 80%;
    }

    .primary-footer span {
        order: 4;
    }

    .primary-footer .social a svg {
        width: var(--size-600);
    }
}

/* the mid section */
.mid-section ul {
    counter-reset: count;
    width: fit-content;
}

.mid-section ul li {
    counter-increment: count;
    display: inline-flex;
    align-items: center;
}

.mid-section ul li:before {
    content: "0" counter(count);
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--clr-neutral-100);
    font-weight: var(--fw-bold);
    background-color: var(--clr-accent-400);
    border-radius: 100vw;
    margin-right: 1rem;
    width: 80px;
    height: 40px;
}

@media (max-width:50em) {
    .main-section {
        flex-direction: column-reverse;
    }

    .mid-section ul {
        text-align: left;
    }
}

/* carousel styling */

.carousel {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-content: center;
    text-align: center;
    margin-block: 2rem;
}

@media (max-width:30em) {
    .mid-section ul li {
        background-color: var(--clr-accent-100);
        border-radius: 100vmax;
        box-shadow: 9em 0 0 var(--clr-accent-100);
    }

    .mid-section ul p {
        margin-left: 0;
        margin-right: 0;
    }



}

@media (max-width:50em) {
    header {
        padding: var(--size-600);
    }

    .primary-navigation,
    header .get-started {
        display: none;
    }

    header .mobile-nav-toggle {
        display: inline-flex;
        background: transparent;
        border: 0;
        cursor: pointer;
        padding: 0.5em;
    }



    .primary-navigation[data-visible] {
        display: block;
        position: absolute;
        flex-wrap: wrap;
        inset: 7rem var(--size-600) auto;
        background: var(--clr-accent-100);
        border-radius: var(--size-100);
        padding: var(--size-700);
    }


    /* .primar::after { */
    /* content: ""; */
    /* position: absolute; */
    /* inset: -5px; */
    /* control the spread */
    /* transform: translate(10px, 8px); */
    /* control the offsets */
    /* z-index: -1; */
    /* place the element behind */
    /* background: linear-gradient(0%, transparent, black); */
    /* your gradient here */
    /* filter: blur(10px); */
    /* control the blur */
    /*  */
    /* } */

    .primary-navigation ul {
        display: grid;
        justify-content: center;
        gap: 4rem;
        text-align: center;
    }


    .icon-close {
        display: none;
    }

}

/* background image */


.with-background-image::before {
    content: "";
    position: absolute;
    top: -20%;
    right: -5%;
    width: 50%;
    height: 100%;
    z-index: -1;
    background-size: contain;
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="814" height="814"><rect width="436" height="970" x="774" y="-62" fill="%23FFF0EC" fill-rule="evenodd" rx="218" transform="rotate(45 718.814 -291.157)"/></svg>');
    background-position: top right;
    background-repeat: no-repeat;
    box-sizing: border-box;
}



.second-blob::after {
    content: "";
    position: absolute;
    top: 100%;
    left: -30%;
    width: 50%;
    height: auto;

    z-index: -1;
    aspect-ratio: 1/1.2;
    background-size: contain;
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="814" height="814"><rect width="436" height="970" x="774" y="-62" fill="%23FFF0EC" fill-rule="evenodd" rx="218" transform="rotate(45 718.814 -291.157)"/></svg>');
    background-position: top right;
    background-repeat: no-repeat;
    box-sizing: border-box;
}

@media (min-width:1400px) {
    .with-background-image::before {
        top: -35%;
        right: -5%;
        height: 100%;
    }
}

@media (max-width: 50em) {
    .with-background-image::before {
        width: 100%;
        top: -15%;
        right: -12%;
    }

    .second-blob::after {
        left: 75%;
        top: 95%;
    }
}

@media (max-width:450px) {
    .with-background-image::before {
        top: -10%;
        right: -20%;
    }
}